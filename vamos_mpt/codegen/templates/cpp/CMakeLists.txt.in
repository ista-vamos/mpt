cmake_minimum_required(VERSION 3.9)
project(monitor LANGUAGES C CXX VERSION 0.1)

# set(vamos-buffers_DIR @vamos-buffers_DIR@)

# find_package(vamos-buffers REQUIRED)

set(CMAKE_BUILD_TYPE @CMAKE_BUILD_TYPE@ CACHE STRING "" FORCE)
# if(NOT CMAKE_BUILD_TYPE)
# 	message(STATUS "Build type not set. Setting vamos-buffer's build type.")
# 	set(CMAKE_BUILD_TYPE ${vamos-buffers_BUILD_TYPE} CACHE STRING "" FORCE)
# endif()

message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
option(ENABLE_IPO "Enable interprocedural optimizations" ON)
if (ENABLE_IPO)
        set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
endif()
# 
# get_target_property(vamos-buffers_vamos-buffers-lib vamos-buffers-lib LOCATION)
# get_target_property(vamos-buffers_vamos-buffers-ringbuf vamos-buffers-ringbuf LOCATION)
# get_target_property(vamos-buffers_vamos-buffers-shmbuf vamos-buffers-shmbuf LOCATION)
# get_target_property(vamos-buffers_vamos-buffers-streams vamos-buffers-streams LOCATION)
# get_filename_component(vamos-buffers_LIBRARIES_DIRS_lib ${vamos-buffers_vamos-buffers-lib} DIRECTORY)
# get_filename_component(vamos-buffers_LIBRARIES_DIRS_core ${vamos-buffers_vamos-buffers-ringbuf} DIRECTORY)
# get_filename_component(vamos-buffers_LIBRARIES_DIRS_shmbuf ${vamos-buffers_vamos-buffers-shmbuf} DIRECTORY)
# get_filename_component(vamos-buffers_LIBRARIES_DIRS_streams ${vamos-buffers_vamos-buffers-streams} DIRECTORY)
 
#message(STATUS "vamos-buffers CXX standard: ${vamos_buffers_CXX_STANDARD} (using it)")
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_library(monitor-lib STATIC monitor.cpp events.cpp mstring.cpp cfgs.cpp)
#target_include_directories(monitor-lib PUBLIC ${vamos-buffers_INCLUDE_DIRS})
#target_link_libraries(monitor-lib PUBLIC vamos-buffers-event)

# add_library(monitor-dbg STATIC monitor.cpp events.cpp mstring.cpp cfgs.cpp)
# target_include_directories(monitor-dbg PUBLIC ${vamos-buffers_INCLUDE_DIRS})
# target_link_libraries(monitor-dbg PUBLIC vamos-hyper vamos-buffers-event)
# target_compile_definitions(monitor-dbg
# 			   PRIVATE EXIT_ON_ERROR=1
# 			   PRIVATE OUTPUT=1)

add_executable(monitor main.cpp @additional_sources@)
#target_include_directories(monitor PUBLIC ${vamos-buffers_INCLUDE_DIRS})
target_link_libraries(monitor PRIVATE monitor-lib)
target_compile_definitions(monitor PRIVATE @additional_cmake_definitions@)

