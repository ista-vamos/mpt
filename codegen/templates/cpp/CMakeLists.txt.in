cmake_minimum_required(VERSION 3.9)
project(monitor LANGUAGES C CXX VERSION 0.1)

set(vamos-buffers_DIR @vamos-buffers_DIR@)
set(vamos-hyper_DIR @vamos-hyper_DIR@)

find_package(vamos-buffers REQUIRED)
find_package(vamos-hyper REQUIRED)

if(NOT CMAKE_BUILD_TYPE)
	message(STATUS "Build type not set. Setting vamos-hyper's build type.")
	set(CMAKE_BUILD_TYPE ${vamos-hyper_BUILD_TYPE} CACHE STRING "" FORCE)
endif()

if (vamos-buffers_OPTION_ENABLE_IPO)
        set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
endif()

get_target_property(vamos-buffers_vamos-buffers-lib vamos-buffers-lib LOCATION)
get_target_property(vamos-buffers_vamos-buffers-ringbuf vamos-buffers-ringbuf LOCATION)
get_target_property(vamos-buffers_vamos-buffers-shmbuf vamos-buffers-shmbuf LOCATION)
get_target_property(vamos-buffers_vamos-buffers-streams vamos-buffers-streams LOCATION)
get_filename_component(vamos-buffers_LIBRARIES_DIRS_lib ${vamos-buffers_vamos-buffers-lib} DIRECTORY)
get_filename_component(vamos-buffers_LIBRARIES_DIRS_core ${vamos-buffers_vamos-buffers-ringbuf} DIRECTORY)
get_filename_component(vamos-buffers_LIBRARIES_DIRS_shmbuf ${vamos-buffers_vamos-buffers-shmbuf} DIRECTORY)
get_filename_component(vamos-buffers_LIBRARIES_DIRS_streams ${vamos-buffers_vamos-buffers-streams} DIRECTORY)

get_target_property(vamos-hyper_vamos-hyper-lib vamos-hyper-lib LOCATION)
get_filename_component(vamos-hyper_LIBRARIES_DIRS_lib ${vamos-hyper_vamos-hyper-lib} DIRECTORY)

message(STATUS "vamos-hyper CXX standard: ${vamos_hyper_CXX_STANDARD} (using it)")
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_CXX_STANDARD ${vamos_hyper_CXX_STANDARD})
set(CMAKE_CXX_STANDARD_REQUIRED ON)

get_filename_component(vamos-buffers_DIR ${vamos-buffers_DIR} ABSOLUTE)
get_filename_component(vamos-hyper_DIR ${vamos-hyper_DIR} ABSOLUTE)
set(vamos-hyper_INCLUDE_DIR "${vamos-hyper_DIR}/../../include")

#target_compile_options(test2 PRIVATE -fsanitize=address,undefined)

add_library(monitor-lib STATIC monitor.cpp events.cpp mstring.cpp cfgs.cpp)
target_include_directories(monitor-lib PUBLIC ${vamos-buffers_INCLUDE_DIRS})
target_link_libraries(monitor-lib PUBLIC vamos-hyper vamos-buffers-event)

# add_library(monitor-dbg STATIC monitor.cpp events.cpp mstring.cpp cfgs.cpp)
# target_include_directories(monitor-dbg PUBLIC ${vamos-buffers_INCLUDE_DIRS})
# target_link_libraries(monitor-dbg PUBLIC vamos-hyper vamos-buffers-event)
# target_compile_definitions(monitor-dbg
# 			   PRIVATE EXIT_ON_ERROR=1
# 			   PRIVATE OUTPUT=1)

add_executable(monitor main.cpp @additional_sources@)
target_include_directories(monitor PUBLIC ${vamos-buffers_INCLUDE_DIRS})
target_link_libraries(monitor PRIVATE monitor-lib)
target_compile_definitions(monitor
                           #PRIVATE RAND_SEED=0xdeed
                           PRIVATE NUM_STREAMS=2
                           PRIVATE STREAM_LEN=10
                           PRIVATE REDUCT_SYMMETRY=1
                           PRIVATE REDUCT_REFLEXIVITY=1
                           )

